{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/src/components/Counter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './Counter.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Counter() {\n  _s();\n  const [count, setCount] = useState(0);\n  const limit = 10;\n  function increment() {\n    if (count !== limit) {\n      setCount(count + 1);\n    } else {\n      alert(\"Limit Reached\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterText\",\n          children: \"Counter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"counterValue\",\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"counterButton\",\n        onClick: increment,\n        children: \"Press\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Counter, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Counter;\nexport default Counter;\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Counter","_s","count","setCount","limit","increment","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/src/components/Counter.jsx"],"sourcesContent":["import React, {useState} from \"react\";\nimport './Counter.css'\n\nfunction Counter() {\n    const [count, setCount] = useState(0);\n    const limit = 10\n    function increment(){\n        if(count !== limit)\n        {\n            setCount(count + 1)\n        }\n        else \n        {\n            alert(\"Limit Reached\")\n        }\n    }\n\n    return <>\n    <div className=\"main\">\n        <div className=\"counter\">\n            <div className=\"counterText\">Counter</div>\n            <div className=\"counterValue\">{count}</div>\n        </div>\n        <button className=\"counterButton\" onClick={increment}>Press</button>\n    </div>\n    </>\n}\n\nexport default Counter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMS,KAAK,GAAG,EAAE;EAChB,SAASC,SAASA,CAAA,EAAE;IAChB,IAAGH,KAAK,KAAKE,KAAK,EAClB;MACID,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACvB,CAAC,MAED;MACII,KAAK,CAAC,eAAe,CAAC;IAC1B;EACJ;EAEA,oBAAOT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACPV,OAAA;MAAKW,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBV,OAAA;QAAKW,SAAS,EAAC,SAAS;QAAAD,QAAA,gBACpBV,OAAA;UAAKW,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1Cf,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAD,QAAA,EAAEL;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACNf,OAAA;QAAQW,SAAS,EAAC,eAAe;QAACK,OAAO,EAAER,SAAU;QAAAE,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE;EAAC,gBACJ,CAAC;AACP;AAACX,EAAA,CAvBQD,OAAO;AAAAc,EAAA,GAAPd,OAAO;AAyBhB,eAAeA,OAAO;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}