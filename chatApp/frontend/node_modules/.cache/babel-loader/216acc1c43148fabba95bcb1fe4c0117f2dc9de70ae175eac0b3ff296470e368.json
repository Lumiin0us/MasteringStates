{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatPanel({\n  loadedMessages,\n  userMessages,\n  setUserMessages,\n  username,\n  selectedUser\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n\n  // Combine loaded and user-specific messages for rendering\n  console.log(\"loadedMessages:\", loadedMessages);\n  const allMessages = [...loadedMessages, ...userMessages];\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    if (chatBody) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n  }, [allMessages]);\n  const handleSendMessage = async () => {\n    if (!text.trim()) return;\n    const newMessage = {\n      message: text,\n      time: currTime\n    };\n    setUserMessages(prev => [...prev, newMessage]);\n    try {\n      await axios.post(\"http://localhost:8080/chatMessages\", {\n        sender: username,\n        receiver: selectedUser,\n        message: text\n      });\n    } catch (e) {\n      console.error(\"Error sending message:\", e);\n    }\n    setText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatPanelText\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), \" Chat Panel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBody\",\n        children: allMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMessage\",\n          children: [message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"currentTime\",\n            children: message.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatInput\",\n          type: \"text\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          },\n          onKeyDown: e => {\n            if (e.key === \"Enter\") handleSendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ChatPanel, \"mMfSPvg3kjJBAgiHJD0l85bq0UA=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPanel","loadedMessages","userMessages","setUserMessages","username","selectedUser","_s","text","setText","currTime","Date","toLocaleTimeString","hour","minute","console","log","allMessages","chatBody","document","querySelector","scrollTop","scrollHeight","handleSendMessage","trim","newMessage","message","time","prev","post","sender","receiver","e","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport axios from \"axios\";\n\nfunction ChatPanel({\n  loadedMessages,\n  userMessages,\n  setUserMessages,\n  username,\n  selectedUser,\n}) {\n  const [text, setText] = useState(\"\");\n\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n\n  // Combine loaded and user-specific messages for rendering\n  console.log(\"loadedMessages:\", loadedMessages);\n\n  const allMessages = [...loadedMessages, ...userMessages];\n\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    if (chatBody) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n  }, [allMessages]);\n\n  const handleSendMessage = async () => {\n    if (!text.trim()) return;\n\n    const newMessage = { message: text, time: currTime };\n    setUserMessages((prev) => [...prev, newMessage]);\n    try {\n      await axios.post(\"http://localhost:8080/chatMessages\", {\n        sender: username,\n        receiver: selectedUser,\n        message: text,\n      });\n    } catch (e) {\n      console.error(\"Error sending message:\", e);\n    }\n\n    setText(\"\");\n  };\n  return (\n    <>\n      <div className=\"chatPanel\">\n        <div className=\"chatPanelText\">\n          {\" \"}\n          <span>{selectedUser}</span> Chat Panel\n        </div>\n        <div className=\"chatBody\">\n          {allMessages.map((message, index) => (\n            <div className=\"chatMessage\" key={index}>\n              {message.message}\n              <span className=\"currentTime\">{message.time}</span>\n            </div>\n          ))}\n        </div>\n        <div className=\"chat\">\n          <input\n            className=\"chatInput\"\n            type=\"text\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") handleSendMessage();\n            }}\n          />\n          <button onClick={handleSendMessage}>Enter</button>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default ChatPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}