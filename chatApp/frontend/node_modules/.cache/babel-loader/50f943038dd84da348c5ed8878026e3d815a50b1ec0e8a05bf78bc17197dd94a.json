{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatPanel({\n  messages,\n  setMessages,\n  username\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatPanelText\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: localStorage.getItem(username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), \" Chat Panel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBody\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMessage\",\n          children: [message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"currentTime\",\n            children: message.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatInput\",\n          type: \"text\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          },\n          onKeyDown: e => {\n            if (e.key === \"Enter\" && text.length >= 1) {\n              setMessages([...messages, {\n                message: text,\n                time: currTime\n              }]);\n              setText(\"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (text.length >= 1) {\n              setMessages([...messages, {\n                message: text,\n                time: currTime\n              }]);\n              setText(\"\");\n            }\n          },\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ChatPanel, \"mMfSPvg3kjJBAgiHJD0l85bq0UA=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPanel","messages","setMessages","username","_s","text","setText","currTime","Date","toLocaleTimeString","hour","minute","chatBody","document","querySelector","scrollTop","scrollHeight","children","className","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","time","type","value","onChange","e","target","onKeyDown","key","length","onClick","_c","$RefreshReg$"],"sources":["/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\n\nfunction ChatPanel({ messages, setMessages, username }) {\n  const [text, setText] = useState(\"\");\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n  }, [messages]);\n  return (\n    <>\n      <div className=\"chatPanel\">\n        <div className=\"chatPanelText\">\n          {\" \"}\n          <span>{localStorage.getItem(username)}</span> Chat Panel\n        </div>\n        <div className=\"chatBody\">\n          {messages.map((message, index) => (\n            <div className=\"chatMessage\" key={index}>\n              {message.message}\n              <span className=\"currentTime\">{message.time}</span>\n            </div>\n          ))}\n        </div>\n        <div className=\"chat\">\n          <input\n            className=\"chatInput\"\n            type=\"text\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && text.length >= 1) {\n                setMessages([...messages, { message: text, time: currTime }]);\n                setText(\"\");\n              }\n            }}\n          />\n          <button\n            onClick={() => {\n              if (text.length >= 1) {\n                setMessages([...messages, { message: text, time: currTime }]);\n                setText(\"\");\n              }\n            }}\n          >\n            Enter\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default ChatPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}