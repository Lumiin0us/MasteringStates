{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatPanel({\n  messages,\n  setMessages,\n  username,\n  selectedUser,\n  setSelectedUser\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n    async function logMessage() {\n      const lastMessage = messages[messages.length - 1];\n      if (!lastMessage) return;\n      await axios.post(\"http://localhost:8080/chatMessages\", {\n        sender: localStorage.getItem(\"username\"),\n        receiver: selectedUser,\n        message: messages[messages.length - 1].message\n      });\n    }\n    console.log(messages);\n    logMessage();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatPanelText\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \" Chat Panel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBody\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMessage\",\n          children: [message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"currentTime\",\n            children: message.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatInput\",\n          type: \"text\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          },\n          onKeyDown: e => {\n            if (e.key === \"Enter\" && text.length >= 1) {\n              setMessages([...messages, {\n                message: text,\n                time: currTime\n              }]);\n              setText(\"\");\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (text.length >= 1) {\n              setMessages([...messages, {\n                message: text,\n                time: currTime\n              }]);\n              setText(\"\");\n            }\n          },\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ChatPanel, \"mMfSPvg3kjJBAgiHJD0l85bq0UA=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPanel","messages","setMessages","username","selectedUser","setSelectedUser","_s","text","setText","currTime","Date","toLocaleTimeString","hour","minute","chatBody","document","querySelector","scrollTop","scrollHeight","logMessage","lastMessage","length","post","sender","localStorage","getItem","receiver","message","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","time","type","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport axios from \"axios\";\n\nfunction ChatPanel({\n  messages,\n  setMessages,\n  username,\n  selectedUser,\n  setSelectedUser,\n}) {\n  const [text, setText] = useState(\"\");\n\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    chatBody.scrollTop = chatBody.scrollHeight;\n    async function logMessage() {\n      const lastMessage = messages[messages.length - 1];\n      if (!lastMessage) return;\n      await axios.post(\"http://localhost:8080/chatMessages\", {\n        sender: localStorage.getItem(\"username\"),\n        receiver: selectedUser,\n        message: messages[messages.length - 1].message,\n      });\n    }\n    console.log(messages);\n    logMessage();\n  }, [messages]);\n  return (\n    <>\n      <div className=\"chatPanel\">\n        <div className=\"chatPanelText\">\n          {\" \"}\n          <span>{selectedUser}</span> Chat Panel\n        </div>\n        <div className=\"chatBody\">\n          {messages.map((message, index) => (\n            <div className=\"chatMessage\" key={index}>\n              {message.message}\n              <span className=\"currentTime\">{message.time}</span>\n            </div>\n          ))}\n        </div>\n        <div className=\"chat\">\n          <input\n            className=\"chatInput\"\n            type=\"text\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && text.length >= 1) {\n                setMessages([...messages, { message: text, time: currTime }]);\n                setText(\"\");\n              }\n            }}\n          />\n          <button\n            onClick={() => {\n              if (text.length >= 1) {\n                setMessages([...messages, { message: text, time: currTime }]);\n                setText(\"\");\n              }\n            }}\n          >\n            Enter\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default ChatPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}