{"ast":null,"code":"var _jsxFileName = \"/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatPanel({\n  socket,\n  allMessages,\n  userMessages,\n  setUserMessages,\n  username,\n  selectedUser\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\"\n  });\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    if (chatBody) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n    console.log(\"All Messages:\", allMessages);\n  }, [allMessages]);\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"receiveMessage\", data => {\n      if (data.sender === selectedUser) {\n        setUserMessages(prev => [...prev, {\n          message: data.message,\n          time: currTime\n        }]);\n      }\n    });\n  }, [socket, selectedUser]);\n  const handleSendMessage = async () => {\n    if (!text.trim()) return;\n    const newMessage = {\n      message: text,\n      time: currTime\n    };\n    setUserMessages(prev => [...prev, newMessage]);\n    socket.emit(\"sendMessage\", {\n      sender: localStorage.getItem(\"username\"),\n      receiver: selectedUser,\n      message: text\n    });\n    setText(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatPanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatPanelText\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: selectedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \" Chat Panel\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBody\",\n        children: allMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chatMessage ${message.sender === username ? \"sentMessage\" : \"receivedMessage\"}`,\n          children: [message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"currentTime\",\n            children: message.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatInput\",\n          type: \"text\",\n          value: text,\n          onChange: e => {\n            setText(e.target.value);\n          },\n          onKeyDown: e => {\n            if (e.key === \"Enter\") handleSendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ChatPanel, \"VMG6bSavi8+gEPntoVhxf+Ayd/w=\");\n_c = ChatPanel;\nexport default ChatPanel;\nvar _c;\n$RefreshReg$(_c, \"ChatPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPanel","socket","allMessages","userMessages","setUserMessages","username","selectedUser","_s","text","setText","currTime","Date","toLocaleTimeString","hour","minute","chatBody","document","querySelector","scrollTop","scrollHeight","console","log","on","data","sender","prev","message","time","handleSendMessage","trim","newMessage","emit","localStorage","getItem","receiver","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/Users/abdurrehman/Desktop/ReactMaster/StatesMaster/react-states/chatApp/frontend/src/components/ChatPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./ChatPanel.css\";\nimport axios from \"axios\";\n\nfunction ChatPanel({\n  socket,\n  allMessages,\n  userMessages,\n  setUserMessages,\n  username,\n  selectedUser,\n}) {\n  const [text, setText] = useState(\"\");\n\n  const currTime = new Date().toLocaleTimeString([], {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n  });\n\n  useEffect(() => {\n    const chatBody = document.querySelector(\".chatBody\");\n    if (chatBody) {\n      chatBody.scrollTop = chatBody.scrollHeight;\n    }\n    console.log(\"All Messages:\", allMessages);\n  }, [allMessages]);\n\n  useEffect(() => {\n    // Listen for incoming messages\n    socket.on(\"receiveMessage\", (data) => {\n      if (data.sender === selectedUser) {\n        setUserMessages((prev) => [\n          ...prev,\n          { message: data.message, time: currTime },\n        ]);\n      }\n    });\n  }, [socket, selectedUser]);\n\n  const handleSendMessage = async () => {\n    if (!text.trim()) return;\n\n    const newMessage = { message: text, time: currTime };\n    setUserMessages((prev) => [...prev, newMessage]);\n\n    socket.emit(\"sendMessage\", {\n      sender: localStorage.getItem(\"username\"),\n      receiver: selectedUser,\n      message: text,\n    });\n\n    setText(\"\");\n  };\n  return (\n    <>\n      <div className=\"chatPanel\">\n        <div className=\"chatPanelText\">\n          {\" \"}\n          <span>{selectedUser}</span> Chat Panel\n        </div>\n        <div className=\"chatBody\">\n          {allMessages.map((message, index) => (\n            <div\n              className={`chatMessage ${\n                message.sender === username ? \"sentMessage\" : \"receivedMessage\"\n              }`}\n              key={index}\n            >\n              {message.message}\n              <span className=\"currentTime\">{message.time}</span>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"chat\">\n          <input\n            className=\"chatInput\"\n            type=\"text\"\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") handleSendMessage();\n            }}\n          />\n          <button onClick={handleSendMessage}>Enter</button>\n        </div>\n      </div>\n    </>\n  );\n}\nexport default ChatPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}